name: Create Release
on:
  push:
    tags:
      - 'v*'
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Generate release notes
        id: release-notes
        run: |
          NOTES=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/generate-notes" \
            -d '{"tag_name": "${{ github.ref_name }}", "previous_tag_name": ""}' | jq -r .body)
          echo "NOTES=$NOTES" >> $GITHUB_ENV
      - name: Replace VERSION in template
        run: |
          TEMPLATE=$(cat .github/release-template.md)
          VERSION=${{ github.ref_name }}
          PREVIOUS_VERSION=$(git tag --sort=-creatordate | grep -B 1 ${{ github.ref_name }} | head -n 1)
          NOTES="${{ env.NOTES }}"
          OUTPUT=${TEMPLATE//\{VERSION\}/$VERSION}
          OUTPUT=${OUTPUT//\{PREVIOUS_VERSION\}/$PREVIOUS_VERSION}
          OUTPUT=${OUTPUT//\{CHANGES\}/$NOTES}
          echo "$OUTPUT" > release-notes.md
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body_path: release-notes.md
          draft: false
          prerelease: false